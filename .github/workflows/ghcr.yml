name: Publish DevBot to GHCR

on:
  # Manual button in the Actions tab
  workflow_dispatch:
    inputs:
      image_name:
        description: "Image name (lowercase, no spaces)"
        type: string
        required: true
        default: devbot
      tag:
        description: "Tag to publish (e.g., latest or v1.2.3)"
        type: string
        required: true
        default: latest
      also_tag_latest:
        description: "Also push :latest?"
        type: boolean
        required: true
        default: true
  # Optional auto-builds
  push:
    branches: [ "main" ]
  release:
    types: [ "published" ]

permissions:
  contents: read
  packages: write   # needed to push to GHCR

jobs:
  build-push:
    name: Build & Push
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      OWNER: ${{ github.repository_owner }}
      IMAGE: ${{ github.repository_owner }}/${
        { github.event_name == 'workflow_dispatch' && inputs.image_name || 'devbot' }}
      # Resolve TAG input or derive from push/release
      TAG_INPUT: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: tags
        run: |
          IMAGE_REF="${REGISTRY}/${IMAGE}"
          TAGS=()

          # If manual run, use provided tag
          if [ -n "${TAG_INPUT}" ]; then
            TAGS+=("${IMAGE_REF}:${TAG_INPUT}")
            if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ inputs.also_tag_latest }}" = "true" ] && [ "${TAG_INPUT}" != "latest" ]; then
              TAGS+=("${IMAGE_REF}:latest")
            fi
          else
            # Push/Releases autoversioning
            if [ "${{ github.event_name }}" = "push" ]; then
              TAGS+=("${IMAGE_REF}:latest")
            elif [ "${{ github.event_name }}" = "release" ]; then
              # release tag name (e.g. v1.2.3)
              TAGS+=("${IMAGE_REF}:${{ github.ref_name }}")
              TAGS+=("${IMAGE_REF}:latest")
            fi
          fi

          printf '%s\n' "${TAGS[@]}" | paste -sd, - > tags.csv
          echo "list=$(cat tags.csv)" >> $GITHUB_OUTPUT
          echo "primary=$(head -n1 tags.csv | cut -d, -f1)" >> $GITHUB_OUTPUT
          echo "tags:"
          cat tags.csv

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.list }}
          # Optional cache for faster rebuilds:
          cache-from: type=gha
          cache-to: type=gha,mode=max
