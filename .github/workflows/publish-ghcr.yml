name: Publish DevBot to GHCR

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: "Image name (lowercase)"
        type: string
        required: true
        default: devbot
      tag:
        description: "Tag to publish (e.g., latest or v0.0.1)"
        type: string
        required: true
        default: latest
      also_tag_latest:
        description: "Also push :latest?"
        type: boolean
        required: true
        default: true
  push:
    branches: [ "main" ]
  release:
    types: [ "published" ]

permissions:
  contents: read
  packages: write

jobs:
  build-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lowercase owner
        id: who
        run: |
          echo "owner_lc=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Resolve image and tags
        id: tags
        run: |
          IMAGE_NAME="${{ inputs.image_name || 'devbot' }}"
          OWNER="${{ steps.who.outputs.owner_lc }}"
          IMAGE_REF="${{ env.REGISTRY }}/${OWNER}/${IMAGE_NAME}"

          TAGS=()
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ inputs.tag }}"
            TAGS+=("${IMAGE_REF}:${TAG}")
            if [ "${{ inputs.also_tag_latest }}" = "true" ] && [ "${TAG}" != "latest" ]; then
              TAGS+=("${IMAGE_REF}:latest")
            fi
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS+=("${IMAGE_REF}:latest")
          elif [ "${{ github.event_name }}" = "release" ]; then
            TAGS+=("${IMAGE_REF}:${{ github.ref_name }}")
            TAGS+=("${IMAGE_REF}:latest")
          fi

          printf '%s\n' "${TAGS[@]}" | paste -sd, - > /tmp/tags.csv
          echo "image_ref=${IMAGE_REF}" >> $GITHUB_OUTPUT
          echo "list=$(cat /tmp/tags.csv)" >> $GITHUB_OUTPUT
          echo "Resolved tags: $(cat /tmp/tags.csv)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.list }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
